import React, {useEffect, useContext} from 'react'

import {currentUserContext} from 'contexts/currentUser'
import useFetch from 'hooks/useFetch'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {

    const [{response}, doFetch] = useFetch('/user')
    const [, dispatch] = useContext(currentUserContext);
    const [token] = useLocalStorage('token')

useEffect(() => {
    if(!token) {
        return dispatch({type: 'SET_UNAUTHORIZED'})
    }

    doFetch();
    
    dispatch({type: 'LOADING'})
    
}, [token,dispatch, doFetch]);

useEffect(() => {
    if (!response) return;

    dispatch({type: 'SET_AUTHORIZED', payload: response.user})

}, [response, dispatch]);

    return (
        <div>
            {children}
        </div>
    )
}

export default CurrentUserChecker
