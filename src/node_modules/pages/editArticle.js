import React, {useEffect, useState, useContext} from 'react'

import ArticleForm from 'components/articleForm'
import useFetch from 'hooks/useFetch'
import { Redirect } from 'react-router-dom'
import {currentUserContext} from 'contexts/currentUser'

const EditArticle = ({match:{params:{slug}}}) => {
    const [{response : fetchArticleResponse}, doFetchArticle] = useFetch(`/articles/${slug}`)
    const [{response : updateArticleResponse, error: updateArticleErrors}, doUpdateArticle] = useFetch(`/articles/${slug}`)

    const [initialValues, setInitialValues] = useState(null);

    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false);

    const [{isLoggedIn}] = useContext(currentUserContext);

    useEffect(() => {
        doFetchArticle()
    }, [doFetchArticle]);

    useEffect(() => {
        if(!fetchArticleResponse) return;

        const {title, description, body, tagList} = fetchArticleResponse.article;

        setInitialValues({
            title, description, body, tagList
        })
    }, [fetchArticleResponse]);

    useEffect(() => {
        if (!updateArticleResponse) return;

        setIsSuccessfullSubmit(true)
        
    }, [updateArticleResponse]);

    // if (!isLoggedIn) {
    //     return <Redirect to="/" />
    // }

    const handleSubmit = (article) => {
        doUpdateArticle({
            method: 'put',
            data: {
                article
            }
        })
    }

    if (isSuccessfullSubmit) {
        return <Redirect to={`/articles/${slug}`}/>
    }

        return <ArticleForm 
            onSubmit={handleSubmit} 
            errors={(updateArticleErrors && updateArticleErrors.errors) || {}} 
            initialValues={initialValues}
        />
    

}

export default EditArticle
